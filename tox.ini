# Copyright 2022 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
no_package = True
skip_missing_interpreters = True
env_list = lint, unit
labels =
    integration = integration-ha, integration-db-router, integration-shared-db, \
        integration-database, integration-mysql-interface, integration-healing, \
        integration-tls

[vars]
src_path = {tox_root}/src
tests_path = {tox_root}/tests
lib_path = {tox_root}/lib/charms/mysql
all_path = {[vars]src_path} {[vars]tests_path} {[vars]lib_path}

[testenv]
set_env =
    PYTHONPATH = {tox_root}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=ipdb.set_trace
    PY_COLORS=1
pass_env =
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS

[testenv:format]
description = Apply coding style standards to code
deps =
    black
    isort
commands =
    isort {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    flake8==5.0.4 # https://github.com/savoirfairelinux/flake8-copyright/issues/19
    flake8-docstrings
    flake8-copyright
    flake8-builtins
    pyproject-flake8
    pep8-naming
    isort
    codespell
    shellcheck-py==0.9.0.2
allowlist_externals = /bin/bash
commands =
    # uncomment the following line if this charm owns a lib
    # codespell {[vars]lib_path}
    codespell {tox_root} --skip {tox_root}/.git --skip {tox_root}/.tox \
        --skip {tox_root}/build --skip {tox_root}/lib --skip {tox_root}/venv \
        --skip {tox_root}/.mypy_cache --skip {tox_root}/icon.svg
    # pflake8 wrapper supports config from pyproject.toml
    pflake8 {[vars]all_path}
    isort --check-only --diff {[vars]all_path}
    black --check --diff {[vars]all_path}
    /bin/bash -c 'shellcheck --color=always $(git ls-files "*.bash" "*.sh")'

[testenv:unit]
description = Run unit tests
deps =
    pytest
    coverage[toml]
    -r {tox_root}/requirements.txt
commands =
    coverage run --source={[vars]src_path},{[vars]lib_path} \
        -m pytest -v --tb native -s {posargs} {[vars]tests_path}/unit
    coverage report

[testenv:integration-ha]
description = Run HA integration tests
pass_env =
    {[testenv]pass_env}
    CI
    CI_PACKED_CHARMS
deps =
    juju==2.9.38.1
    mysql-connector-python
    pytest
    pytest-operator
    pyyaml
    -r {tox_root}/requirements.txt
commands =
    pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/high_availability/test_replication.py

[testenv:integration-db-router]
description = Run legacy db-router relation integration tests
pass_env =
    {[testenv]pass_env}
    CI
    CI_PACKED_CHARMS
deps =
    juju==2.9.38.1
    mysql-connector-python
    pytest
    pytest-operator
    pyyaml
    -r {tox_root}/requirements.txt
commands =
    pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/relations/test_db_router.py

[testenv:integration-shared-db]
description = Run legacy shared-db relation integration tests
pass_env =
    {[testenv]pass_env}
    CI
    CI_PACKED_CHARMS
deps =
    juju==2.9.38.1
    mysql-connector-python
    pytest
    pytest-operator
    pyyaml
    -r {tox_root}/requirements.txt
commands =
    pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/relations/test_shared_db.py

[testenv:integration-database]
description = Run integration tests
pass_env =
    {[testenv]pass_env}
    CI
    CI_PACKED_CHARMS
deps =
    juju==2.9.38.1
    mysql-connector-python
    pytest
    pytest-operator
    pyyaml
    -r {tox_root}/requirements.txt
commands =
    pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/relations/test_database.py

[testenv:integration-mysql-interface]
description = Run integration tests for legacy mysql interface
pass_env =
    {[testenv]pass_env}
    CI
    CI_PACKED_CHARMS
deps =
    juju==2.9.38.1
    mysql-connector-python
    pytest
    pytest-operator
    pyyaml
    -r {tox_root}/requirements.txt
commands =
    pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/relations/test_relation_mysql_legacy.py

[testenv:integration-healing]
description = Run self-healing tests
pass_env =
    {[testenv]pass_env}
    CI
    CI_PACKED_CHARMS
deps =
    juju==2.9.38.1
    mysql-connector-python
    pytest
    pytest-operator
    pyyaml
    -r {tox_root}/requirements.txt
commands =
    pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/high_availability/test_self_healing.py

[testenv:integration-tls]
description = Run TLS tests
pass_env =
    {[testenv]pass_env}
    CI
    CI_PACKED_CHARMS
deps =
    juju==2.9.38.1
    mysql-connector-python
    pytest
    pytest-operator
    pyyaml
    -r {tox_root}/requirements.txt
commands =
    pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/test_tls.py

# Used to mark tests run locally (in order to target specific tests to run)
[testenv:dev]
description = Run in development test
pass_env =
    {[testenv]pass_env}
    CI
    CI_PACKED_CHARMS
deps =
    juju==2.9.38.1
    mysql-connector-python
    pytest
    pdbpp
    pytest-operator
    pyyaml
    -r {tox_root}/requirements.txt
commands =
    pytest -v --tb native --ignore={[vars]tests_path}/unit --log-cli-level=INFO -s {posargs} -m "dev"

