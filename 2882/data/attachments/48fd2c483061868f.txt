[32mINFO    [0m integration.high_availability.conftest:conftest.py:23 Clearing continuous writes
[32mINFO    [0m integration.high_availability.conftest:conftest.py:26 Starting continuous writes
[32mINFO    [0m integration.high_availability.test_upgrade_rollback_incompat:test_upgrade_rollback_incompat.py:99 Ensure continuous_writes
[32mINFO    [0m integration.high_availability.high_availability_helpers:high_availability_helpers.py:356 Ensure continuous writes are incrementing
[32mINFO    [0m integration.helpers:helpers.py:485 Retrieving primary unit
[32mINFO    [0m integration.high_availability.test_upgrade_rollback_incompat:test_upgrade_rollback_incompat.py:103 Build charm locally
[32mINFO    [0m integration.high_availability.test_upgrade_rollback_incompat:test_upgrade_rollback_incompat.py:186 Applying patch to source
[32mINFO    [0m integration.high_availability.test_upgrade_rollback_incompat:test_upgrade_rollback_incompat.py:183 Reverting patch on source
[32mINFO    [0m integration.high_availability.test_upgrade_rollback_incompat:test_upgrade_rollback_incompat.py:113 Refresh the charm
[32mINFO    [0m integration.high_availability.test_upgrade_rollback_incompat:test_upgrade_rollback_incompat.py:116 Wait for upgrade to start
[32mINFO    [0m integration.high_availability.test_upgrade_rollback_incompat:test_upgrade_rollback_incompat.py:121 Get first upgrading unit
[32mINFO    [0m integration.high_availability.test_upgrade_rollback_incompat:test_upgrade_rollback_incompat.py:130 Wait for upgrade to fail on upgrading unit
[32mINFO    [0m integration.high_availability.conftest:conftest.py:31 Clearing continuous writes